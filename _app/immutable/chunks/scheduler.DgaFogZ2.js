function k(){}function w(t,n){for(const e in n)t[e]=n[e];return t}function j(t){return t()}function F(){return Object.create(null)}function E(t){t.forEach(j)}function q(t){return typeof t=="function"}function P(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let f;function S(t,n){return t===n?!0:(f||(f=document.createElement("a")),f.href=n,t===f.href)}function U(t){return Object.keys(t).length===0}function A(t,n,e,r){if(t){const o=m(t,n,e,r);return t[0](o)}}function m(t,n,e,r){return t[1]&&r?w(e.ctx.slice(),t[1](r(n))):e.ctx}function B(t,n,e,r){if(t[2]&&r){const o=t[2](r(e));if(n.dirty===void 0)return o;if(typeof o=="object"){const l=[],d=Math.max(n.dirty.length,o.length);for(let s=0;s<d;s+=1)l[s]=n.dirty[s]|o[s];return l}return n.dirty|o}return n.dirty}function C(t,n,e,r,o,l){if(o){const d=m(n,e,r,l);t.p(d,o)}}function D(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let r=0;r<e;r++)n[r]=-1;return n}return-1}function G(t){return t&&q(t.destroy)?t.destroy:k}let i;function h(t){i=t}function b(){if(!i)throw new Error("Function called outside component initialization");return i}function H(t){b().$$.on_mount.push(t)}function I(t){b().$$.after_update.push(t)}const a=[],g=[];let u=[];const y=[],x=Promise.resolve();let p=!1;function v(){p||(p=!0,x.then(M))}function J(){return v(),x}function O(t){u.push(t)}const _=new Set;let c=0;function M(){if(c!==0)return;const t=i;do{try{for(;c<a.length;){const n=a[c];c++,h(n),z(n.$$)}}catch(n){throw a.length=0,c=0,n}for(h(null),a.length=0,c=0;g.length;)g.pop()();for(let n=0;n<u.length;n+=1){const e=u[n];_.has(e)||(_.add(e),e())}u.length=0}while(a.length);for(;y.length;)y.pop()();p=!1,_.clear(),h(t)}function z(t){if(t.fragment!==null){t.update(),E(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(O)}}function K(t){const n=[],e=[];u.forEach(r=>t.indexOf(r)===-1?n.push(r):e.push(r)),e.forEach(r=>r()),u=n}export{I as a,g as b,A as c,B as d,G as e,S as f,D as g,O as h,q as i,F as j,M as k,U as l,K as m,k as n,H as o,i as p,h as q,E as r,P as s,J as t,C as u,j as v,a as w,v as x};
